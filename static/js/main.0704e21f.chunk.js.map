{"version":3,"sources":["Components/profile/Profile.module.css","Components/statistics/Statistics.module.css","Components/friendList/FriendsList.module.css","Components/transactionHistory/TransactionHistory.module.css","Components/profile/Profile.js","Components/statistics/Statistics.js","Components/friendList/FriendList.js","Components/transactionHistory/TransactionHistory.js","data/index.js","Components/App.js","index.js"],"names":["module","exports","Profile","user","className","style","Description","src","avatar","alt","name","width","Avatar","Name","Tag","tag","Location","location","Stats","Object","entries","stats","map","Item","Label","Quantity","Statistic","title","statistic","Statistics","Title","List","start","label","Percentage","percentage","id","FriendList","friends","friend","isOnline","Online","Offline","Img","TransactionHistory","transactions","Row","Colom","trans","type","amount","currency","data","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0704e21f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3pcvb\",\"Description\":\"Profile_Description__3Qd95\",\"Name\":\"Profile_Name__21Qzv\",\"Location\":\"Profile_Location__u9aZK\",\"Tag\":\"Profile_Tag__22hHS\",\"Stats\":\"Profile_Stats__wLeg1\",\"Item\":\"Profile_Item__1_YJf\",\"Label\":\"Profile_Label__2nsMA\",\"Quantity\":\"Profile_Quantity__3Blj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__2Mtzc\",\"Title\":\"Statistics_Title__ILL-T\",\"List\":\"Statistics_List__1Jpk6\",\"Item\":\"Statistics_Item__38TvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"FriendsList_List__2jBC0\",\"Item\":\"FriendsList_Item__3mFrr\",\"Online\":\"FriendsList_Online__LA35b\",\"Offline\":\"FriendsList_Offline__1T_WR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__2bf_H\"};","import PropTypes from 'prop-types';\nimport style from './Profile.module.css';\nimport React from 'react';\n\nconst Profile = ({ user }) => {\n  return (\n    <div className={style.Profile}>\n      <div className={style.Description}>\n        <img\n          src={user.avatar}\n          alt={user.name}\n          width=\"200\"\n          className={style.Avatar}\n        />\n        <p className={style.Name}>{user.name}</p>\n        <p className={style.Tag}>@{user.tag}</p>\n        <p className={style.Location}>{user.location}</p>\n      </div>\n\n      <ul className={style.Stats}>\n        {Object.entries(user.stats).map(stats => {\n          return (\n            <li key={stats[0]} className={style.Item}>\n              <span className={style.Label}>{stats[0]} </span>\n              <span className={style.Quantity}>{stats[1]}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  // stats: PropTypes.shape(),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\nimport React from 'react';\n\nconst Statistic = ({ title, statistic }) => {\n  return (\n    <div className={style.Statistics}>\n      <h2 className={style.Title}>{title}</h2>\n      <ul className={style.List}>\n        {statistic.map(start => {\n          return (\n            <li key={start.id} className={style.Item}>\n              <span className={style.Label}>{start.label}</span>\n              <span className={style.Percentage}>{start.percentage}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default Statistic;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './FriendsList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={style.List}>\n      {friends.map(friend => {\n        return (\n          <li key={friend.id} className={style.Item}>\n            <span\n              className={friend.isOnline ? style.Online : style.Offline}\n            ></span>\n            <img\n              src={friend.avatar}\n              alt={friend.name}\n              width=\"100\"\n              className={style.Img}\n            />\n            <p className={style.Name}>{friend.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={style.TransactionHistory}>\n      <thead className={style.Label}>\n        <tr className={style.Row}>\n          <th className={style.Colom}>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(trans => {\n          return (\n            <tr key={trans.id}>\n              <td>{trans.type}</td>\n              <td>{trans.amount}</td>\n              <td>{trans.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  id: PropTypes.number.isRequired,\n  amount: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistory;\n","import friends from './friends.json';\nimport statistic from './statistical-data.json';\nimport transactions from './transactions.json';\nimport user from './user.json';\n\nconst data = { friends, statistic, transactions, user };\n\nexport default data;\n","import React from 'react';\nimport Profile from './profile/Profile';\nimport Statistics from './statistics/Statistics';\nimport FriendList from './friendList/FriendList';\nimport TransactionHistory from './transactionHistory/TransactionHistory';\nimport data from '../data';\n\nconst App = () => {\n  return (\n    <>\n      <Profile user={data.user} />\n      <Statistics statistic={data.statistic} />\n      <FriendList friends={data.friends} />\n      <TransactionHistory transactions={data.transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}